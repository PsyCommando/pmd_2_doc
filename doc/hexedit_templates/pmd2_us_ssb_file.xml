<?xml version="1.0"?>
<!DOCTYPE binary_file_format SYSTEM "BinaryFileFormat.dtd">
<binary_file_format name="SSB" type_name="" comment="" expr="">

    
    <define_struct type_name="instruction" comment="" expr="{this.opcode;hex} - {ScriptOpCodeNames[this.opcode]}({@ParamStr})">
        <eval expr="@ParamStr=&quot; &quot;" display_error="false" display_result="false" comment=""/>
        <data type="int" name="opcode" format="unsigned" len="2" display="hex"/>
        <eval expr="CurrentOffset = CurrentOffset + 2" display_error="false" display_result="false" comment=""/>
        <if test ="opcode &lt;= 0x17E" comment="">
            <if test ="NbOpCodeParams[opcode] != -1" comment="">
                <for name="Param" count="NbOpCodeParams[opcode]" stop_test="" type_name="" comment="">
                    <struct name="aparam" type_name="" comment="" expr="{this.opparam;hex}">
                        <data type="int" name="opparam" format="signed" len="2" display="hex"/>
                        <eval expr="@ParamStr=@ParamStr + &quot; &quot;" display_error="false" display_result="false" comment=""/>
                        <eval expr="@ParamStr=@ParamStr + string(opparam)" display_error="false" display_result="false" comment=""/>
                        <eval expr="@ParamStr=@ParamStr + &quot;,&quot;" display_error="false" display_result="false" comment=""/>
                        <eval expr="CurrentOffset = CurrentOffset + 2" display_error="false" display_result="false" comment=""/>
                    </struct>
                </for>
            </if>
        </if>
    </define_struct>
    
    <eval expr="CurrentOffset = 0" display_error="false" display_result="false" comment=""/>
    <eval expr="NbOpCodeParams[0x000]=0, NbOpCodeParams[0x001]=1, NbOpCodeParams[0x002]=1, NbOpCodeParams[0x003]=2, NbOpCodeParams[0x004]=2, NbOpCodeParams[0x005]=2, NbOpCodeParams[0x006]=6, NbOpCodeParams[0x007]=2, NbOpCodeParams[0x008]=2, NbOpCodeParams[0x009]=1, NbOpCodeParams[0x00a]=2, NbOpCodeParams[0x00b]=2, NbOpCodeParams[0x00c]=2, NbOpCodeParams[0x00d]=2, NbOpCodeParams[0x00e]=1, NbOpCodeParams[0x00f]=1, NbOpCodeParams[0x010]=2, NbOpCodeParams[0x011]=2, NbOpCodeParams[0x012]=1, NbOpCodeParams[0x013]=2, NbOpCodeParams[0x014]=2, NbOpCodeParams[0x015]=2, NbOpCodeParams[0x016]=2, NbOpCodeParams[0x017]=1, NbOpCodeParams[0x018]=1, NbOpCodeParams[0x019]=3, NbOpCodeParams[0x01a]=1, NbOpCodeParams[0x01b]=1, NbOpCodeParams[0x01c]=2, NbOpCodeParams[0x01d]=2, NbOpCodeParams[0x01e]=1, NbOpCodeParams[0x01f]=1, NbOpCodeParams[0x020]=3, NbOpCodeParams[0x021]=0, NbOpCodeParams[0x022]=2, NbOpCodeParams[0x023]=1, NbOpCodeParams[0x024]=1, NbOpCodeParams[0x025]=3, NbOpCodeParams[0x026]=0, NbOpCodeParams[0x027]=2, NbOpCodeParams[0x028]=3, NbOpCodeParams[0x029]=3, NbOpCodeParams[0x02a]=2, NbOpCodeParams[0x02b]=2, NbOpCodeParams[0x02c]=2, NbOpCodeParams[0x02d]=3, NbOpCodeParams[0x02e]=4, NbOpCodeParams[0x02f]=4, NbOpCodeParams[0x030]=4, NbOpCodeParams[0x031]=4, NbOpCodeParams[0x032]=4, NbOpCodeParams[0x033]=4, NbOpCodeParams[0x034]=4, NbOpCodeParams[0x035]=4, NbOpCodeParams[0x036]=2, NbOpCodeParams[0x037]=1, NbOpCodeParams[0x038]=1, NbOpCodeParams[0x039]=1, NbOpCodeParams[0x03a]=1, NbOpCodeParams[0x03b]=1, NbOpCodeParams[0x03c]=-1, NbOpCodeParams[0x03d]=5, NbOpCodeParams[0x03e]=1, NbOpCodeParams[0x03f]=1, NbOpCodeParams[0x040]=1, NbOpCodeParams[0x041]=-1, NbOpCodeParams[0x042]=5, NbOpCodeParams[0x043]=1, NbOpCodeParams[0x044]=1, NbOpCodeParams[0x045]=1, NbOpCodeParams[0x046]=-1, NbOpCodeParams[0x047]=5, NbOpCodeParams[0x048]=0, NbOpCodeParams[0x049]=3, NbOpCodeParams[0x04a]=0, NbOpCodeParams[0x04b]=0, NbOpCodeParams[0x04c]=4, NbOpCodeParams[0x04d]=1, NbOpCodeParams[0x04e]=1, NbOpCodeParams[0x04f]=1, NbOpCodeParams[0x050]=-1, NbOpCodeParams[0x051]=5, NbOpCodeParams[0x052]=1, NbOpCodeParams[0x053]=1, NbOpCodeParams[0x054]=1, NbOpCodeParams[0x055]=-1, NbOpCodeParams[0x056]=5, NbOpCodeParams[0x057]=1, NbOpCodeParams[0x058]=1, NbOpCodeParams[0x059]=1, NbOpCodeParams[0x05a]=-1, NbOpCodeParams[0x05b]=5, NbOpCodeParams[0x05c]=0, NbOpCodeParams[0x05d]=3, NbOpCodeParams[0x05e]=0, NbOpCodeParams[0x05f]=0, NbOpCodeParams[0x060]=4, NbOpCodeParams[0x061]=0, NbOpCodeParams[0x062]=1, NbOpCodeParams[0x063]=2, NbOpCodeParams[0x064]=2, NbOpCodeParams[0x065]=2, NbOpCodeParams[0x066]=3, NbOpCodeParams[0x067]=2, NbOpCodeParams[0x068]=3, NbOpCodeParams[0x069]=3, NbOpCodeParams[0x06a]=1, NbOpCodeParams[0x06b]=1, NbOpCodeParams[0x06c]=2, NbOpCodeParams[0x06d]=2, NbOpCodeParams[0x06e]=1, NbOpCodeParams[0x06f]=0, NbOpCodeParams[0x070]=0, NbOpCodeParams[0x071]=0, NbOpCodeParams[0x072]=1, NbOpCodeParams[0x073]=2, NbOpCodeParams[0x074]=3, NbOpCodeParams[0x075]=3, NbOpCodeParams[0x076]=3, NbOpCodeParams[0x077]=1, NbOpCodeParams[0x078]=1, NbOpCodeParams[0x079]=2, NbOpCodeParams[0x07a]=0, NbOpCodeParams[0x07b]=1, NbOpCodeParams[0x07c]=1, NbOpCodeParams[0x07d]=2, NbOpCodeParams[0x07e]=2, NbOpCodeParams[0x07f]=2, NbOpCodeParams[0x080]=3, NbOpCodeParams[0x081]=0, NbOpCodeParams[0x082]=0, NbOpCodeParams[0x083]=2, NbOpCodeParams[0x084]=3, NbOpCodeParams[0x085]=2, NbOpCodeParams[0x086]=2, NbOpCodeParams[0x087]=1, NbOpCodeParams[0x088]=1, NbOpCodeParams[0x089]=1, NbOpCodeParams[0x08a]=1, NbOpCodeParams[0x08b]=1, NbOpCodeParams[0x08c]=2, NbOpCodeParams[0x08d]=2, NbOpCodeParams[0x08e]=2, NbOpCodeParams[0x08f]=3, NbOpCodeParams[0x090]=1, NbOpCodeParams[0x091]=2, NbOpCodeParams[0x092]=2, NbOpCodeParams[0x093]=1, NbOpCodeParams[0x094]=1, NbOpCodeParams[0x095]=0, NbOpCodeParams[0x096]=0, NbOpCodeParams[0x097]=0, NbOpCodeParams[0x098]=1, NbOpCodeParams[0x099]=2, NbOpCodeParams[0x09a]=1, NbOpCodeParams[0x09b]=0, NbOpCodeParams[0x09c]=1, NbOpCodeParams[0x09d]=1, NbOpCodeParams[0x09e]=1, NbOpCodeParams[0x09f]=2, NbOpCodeParams[0x0a0]=1, NbOpCodeParams[0x0a1]=0, NbOpCodeParams[0x0a2]=0, NbOpCodeParams[0x0a3]=1, NbOpCodeParams[0x0a4]=3, NbOpCodeParams[0x0a5]=3, NbOpCodeParams[0x0a6]=3, NbOpCodeParams[0x0a7]=1, NbOpCodeParams[0x0a8]=2, NbOpCodeParams[0x0a9]=1, NbOpCodeParams[0x0aa]=2, NbOpCodeParams[0x0ab]=3, NbOpCodeParams[0x0ac]=1, NbOpCodeParams[0x0ad]=1, NbOpCodeParams[0x0ae]=1, NbOpCodeParams[0x0af]=3, NbOpCodeParams[0x0b0]=2, NbOpCodeParams[0x0b1]=-1, NbOpCodeParams[0x0b2]=5, NbOpCodeParams[0x0b3]=-1, NbOpCodeParams[0x0b4]=3, NbOpCodeParams[0x0b5]=3, NbOpCodeParams[0x0b6]=3, NbOpCodeParams[0x0b7]=2, NbOpCodeParams[0x0b8]=-1, NbOpCodeParams[0x0b9]=5, NbOpCodeParams[0x0ba]=-1, NbOpCodeParams[0x0bb]=3, NbOpCodeParams[0x0bc]=3, NbOpCodeParams[0x0bd]=3, NbOpCodeParams[0x0be]=2, NbOpCodeParams[0x0bf]=3, NbOpCodeParams[0x0c0]=2, NbOpCodeParams[0x0c1]=3, NbOpCodeParams[0x0c2]=-1, NbOpCodeParams[0x0c3]=5, NbOpCodeParams[0x0c4]=6, NbOpCodeParams[0x0c5]=-1, NbOpCodeParams[0x0c6]=3, NbOpCodeParams[0x0c7]=3, NbOpCodeParams[0x0c8]=3, NbOpCodeParams[0x0c9]=1, NbOpCodeParams[0x0ca]=1, NbOpCodeParams[0x0cb]=1, NbOpCodeParams[0x0cc]=3, NbOpCodeParams[0x0cd]=4, NbOpCodeParams[0x0ce]=4, NbOpCodeParams[0x0cf]=1, NbOpCodeParams[0x0d0]=1, NbOpCodeParams[0x0d1]=1, NbOpCodeParams[0x0d2]=1, NbOpCodeParams[0x0d3]=1, NbOpCodeParams[0x0d4]=1, NbOpCodeParams[0x0d5]=0, NbOpCodeParams[0x0d6]=1, NbOpCodeParams[0x0d7]=4, NbOpCodeParams[0x0d8]=4, NbOpCodeParams[0x0d9]=2, NbOpCodeParams[0x0da]=2, NbOpCodeParams[0x0db]=2, NbOpCodeParams[0x0dc]=2, NbOpCodeParams[0x0dd]=8, NbOpCodeParams[0x0de]=6, NbOpCodeParams[0x0df]=6, NbOpCodeParams[0x0e0]=4, NbOpCodeParams[0x0e1]=4, NbOpCodeParams[0x0e2]=2, NbOpCodeParams[0x0e3]=2, NbOpCodeParams[0x0e4]=2, NbOpCodeParams[0x0e5]=2, NbOpCodeParams[0x0e6]=4, NbOpCodeParams[0x0e7]=4, NbOpCodeParams[0x0e8]=2, NbOpCodeParams[0x0e9]=2, NbOpCodeParams[0x0ea]=2, NbOpCodeParams[0x0eb]=2, NbOpCodeParams[0x0ec]=8, NbOpCodeParams[0x0ed]=6, NbOpCodeParams[0x0ee]=6, NbOpCodeParams[0x0ef]=4, NbOpCodeParams[0x0f0]=4, NbOpCodeParams[0x0f1]=2, NbOpCodeParams[0x0f2]=2, NbOpCodeParams[0x0f3]=2, NbOpCodeParams[0x0f4]=2, NbOpCodeParams[0x0f5]=3, NbOpCodeParams[0x0f6]=3, NbOpCodeParams[0x0f7]=2, NbOpCodeParams[0x0f8]=1, NbOpCodeParams[0x0f9]=3, NbOpCodeParams[0x0fa]=2, NbOpCodeParams[0x0fb]=2, NbOpCodeParams[0x0fc]=1, NbOpCodeParams[0x0fd]=1, NbOpCodeParams[0x0fe]=1, NbOpCodeParams[0x0ff]=2, NbOpCodeParams[0x100]=1, NbOpCodeParams[0x101]=2, NbOpCodeParams[0x102]=2, NbOpCodeParams[0x103]=1, NbOpCodeParams[0x104]=1, NbOpCodeParams[0x105]=1, NbOpCodeParams[0x106]=6, NbOpCodeParams[0x107]=1, NbOpCodeParams[0x108]=2, NbOpCodeParams[0x109]=0, NbOpCodeParams[0x10a]=1, NbOpCodeParams[0x10b]=4, NbOpCodeParams[0x10c]=2, NbOpCodeParams[0x10d]=2, NbOpCodeParams[0x10e]=1, NbOpCodeParams[0x10f]=3, NbOpCodeParams[0x110]=3, NbOpCodeParams[0x111]=2, NbOpCodeParams[0x112]=-1, NbOpCodeParams[0x113]=5, NbOpCodeParams[0x114]=-1, NbOpCodeParams[0x115]=3, NbOpCodeParams[0x116]=3, NbOpCodeParams[0x117]=3, NbOpCodeParams[0x118]=2, NbOpCodeParams[0x119]=-1, NbOpCodeParams[0x11a]=5, NbOpCodeParams[0x11b]=-1, NbOpCodeParams[0x11c]=3, NbOpCodeParams[0x11d]=3, NbOpCodeParams[0x11e]=2, NbOpCodeParams[0x11f]=3, NbOpCodeParams[0x120]=2, NbOpCodeParams[0x121]=3, NbOpCodeParams[0x122]=-1, NbOpCodeParams[0x123]=5, NbOpCodeParams[0x124]=6, NbOpCodeParams[0x125]=-1, NbOpCodeParams[0x126]=3, NbOpCodeParams[0x127]=1, NbOpCodeParams[0x128]=0, NbOpCodeParams[0x129]=0, NbOpCodeParams[0x12a]=1, NbOpCodeParams[0x12b]=1, NbOpCodeParams[0x12c]=3, NbOpCodeParams[0x12d]=3, NbOpCodeParams[0x12e]=1, NbOpCodeParams[0x12f]=1, NbOpCodeParams[0x130]=3, NbOpCodeParams[0x131]=2, NbOpCodeParams[0x132]=2, NbOpCodeParams[0x133]=3, NbOpCodeParams[0x134]=1, NbOpCodeParams[0x135]=1, NbOpCodeParams[0x136]=2, NbOpCodeParams[0x137]=1, NbOpCodeParams[0x138]=1, NbOpCodeParams[0x139]=1, NbOpCodeParams[0x13a]=3, NbOpCodeParams[0x13b]=1, NbOpCodeParams[0x13c]=1, NbOpCodeParams[0x13d]=1, NbOpCodeParams[0x13e]=3, NbOpCodeParams[0x13f]=1, NbOpCodeParams[0x140]=1, NbOpCodeParams[0x141]=1, NbOpCodeParams[0x142]=1, NbOpCodeParams[0x143]=4, NbOpCodeParams[0x144]=1, NbOpCodeParams[0x145]=1, NbOpCodeParams[0x146]=1, NbOpCodeParams[0x147]=1, NbOpCodeParams[0x148]=1, NbOpCodeParams[0x149]=0, NbOpCodeParams[0x14a]=3, NbOpCodeParams[0x14b]=3, NbOpCodeParams[0x14c]=3, NbOpCodeParams[0x14d]=3, NbOpCodeParams[0x14e]=3, NbOpCodeParams[0x14f]=8, NbOpCodeParams[0x150]=3, NbOpCodeParams[0x151]=4, NbOpCodeParams[0x152]=1, NbOpCodeParams[0x153]=2, NbOpCodeParams[0x154]=2, NbOpCodeParams[0x155]=5, NbOpCodeParams[0x156]=1, NbOpCodeParams[0x157]=1, NbOpCodeParams[0x158]=0, NbOpCodeParams[0x159]=0, NbOpCodeParams[0x15a]=0, NbOpCodeParams[0x15b]=1, NbOpCodeParams[0x15c]=1, NbOpCodeParams[0x15d]=0, NbOpCodeParams[0x15e]=0, NbOpCodeParams[0x15f]=0, NbOpCodeParams[0x160]=1, NbOpCodeParams[0x161]=1, NbOpCodeParams[0x162]=1, NbOpCodeParams[0x163]=0, NbOpCodeParams[0x164]=2, NbOpCodeParams[0x165]=2, NbOpCodeParams[0x166]=2, NbOpCodeParams[0x167]=1, NbOpCodeParams[0x168]=1, NbOpCodeParams[0x169]=0, NbOpCodeParams[0x16a]=0, NbOpCodeParams[0x16b]=2, NbOpCodeParams[0x16c]=0, NbOpCodeParams[0x16d]=0, NbOpCodeParams[0x16e]=0, NbOpCodeParams[0x16f]=1, NbOpCodeParams[0x170]=0, NbOpCodeParams[0x171]=0, NbOpCodeParams[0x172]=0, NbOpCodeParams[0x173]=1, NbOpCodeParams[0x174]=1, NbOpCodeParams[0x175]=0, NbOpCodeParams[0x176]=1, NbOpCodeParams[0x177]=0, NbOpCodeParams[0x178]=1, NbOpCodeParams[0x179]=1, NbOpCodeParams[0x17a]=1, NbOpCodeParams[0x17b]=1, NbOpCodeParams[0x17c]=1, NbOpCodeParams[0x17d]=1, NbOpCodeParams[0x17e]=1" display_error="false" display_result="false" comment="" />
    <eval expr="ScriptOpCodeNames[0x000]=&quot;null&quot;, ScriptOpCodeNames[0x001]=&quot;back_ChangeGround&quot;, ScriptOpCodeNames[0x002]=&quot;back_SetBackEffect&quot;, ScriptOpCodeNames[0x003]=&quot;back_SetBackScrollOffset&quot;, ScriptOpCodeNames[0x004]=&quot;back_SetBackScrollSpeed&quot;, ScriptOpCodeNames[0x005]=&quot;back_SetBanner&quot;, ScriptOpCodeNames[0x006]=&quot;back_SetBanner2&quot;, ScriptOpCodeNames[0x007]=&quot;back_SetEffect&quot;, ScriptOpCodeNames[0x008]=&quot;back_SetDungeonBanner&quot;, ScriptOpCodeNames[0x009]=&quot;back_SetGround&quot;, ScriptOpCodeNames[0x00a]=&quot;back_SetSpecialEpisodeBanner&quot;, ScriptOpCodeNames[0x00b]=&quot;back_SetSpecialEpisodeBanner2&quot;, ScriptOpCodeNames[0x00c]=&quot;back_SetSpecialEpisodeBanner3&quot;, ScriptOpCodeNames[0x00d]=&quot;back_SetTitleBanner&quot;, ScriptOpCodeNames[0x00e]=&quot;back_SetWeather&quot;, ScriptOpCodeNames[0x00f]=&quot;back_SetWeatherEffect&quot;, ScriptOpCodeNames[0x010]=&quot;back_SetWeatherScrollOffset&quot;, ScriptOpCodeNames[0x011]=&quot;back_SetWeatherScrollSpeed&quot;, ScriptOpCodeNames[0x012]=&quot;back2_SetBackEffect&quot;, ScriptOpCodeNames[0x013]=&quot;back2_SetBackScrollOffset&quot;, ScriptOpCodeNames[0x014]=&quot;back2_SetBackScrollSpeed&quot;, ScriptOpCodeNames[0x015]=&quot;back2_SetData&quot;, ScriptOpCodeNames[0x016]=&quot;back2_SetEffect&quot;, ScriptOpCodeNames[0x017]=&quot;back2_SetGround&quot;, ScriptOpCodeNames[0x018]=&quot;back2_SetMode&quot;, ScriptOpCodeNames[0x019]=&quot;back2_SetSpecialActing&quot;, ScriptOpCodeNames[0x01a]=&quot;back2_SetWeather&quot;, ScriptOpCodeNames[0x01b]=&quot;back2_SetWeatherEffect&quot;, ScriptOpCodeNames[0x01c]=&quot;back2_SetWeatherScrollOffset&quot;, ScriptOpCodeNames[0x01d]=&quot;back2_SetWeatherScrollSpeed&quot;, ScriptOpCodeNames[0x01e]=&quot;bgm_FadeOut&quot;, ScriptOpCodeNames[0x01f]=&quot;bgm_Play&quot;, ScriptOpCodeNames[0x020]=&quot;bgm_PlayFadeIn&quot;, ScriptOpCodeNames[0x021]=&quot;bgm_Stop&quot;, ScriptOpCodeNames[0x022]=&quot;bgm_ChangeVolume&quot;, ScriptOpCodeNames[0x023]=&quot;bgm2_FadeOut&quot;, ScriptOpCodeNames[0x024]=&quot;bgm2_Play&quot;, ScriptOpCodeNames[0x025]=&quot;bgm2_PlayFadeIn&quot;, ScriptOpCodeNames[0x026]=&quot;bgm2_Stop&quot;, ScriptOpCodeNames[0x027]=&quot;bgm2_ChangeVolume&quot;, ScriptOpCodeNames[0x028]=&quot;Branch&quot;, ScriptOpCodeNames[0x029]=&quot;BranchBit&quot;, ScriptOpCodeNames[0x02a]=&quot;BranchDebug&quot;, ScriptOpCodeNames[0x02b]=&quot;BranchEdit&quot;, ScriptOpCodeNames[0x02c]=&quot;BranchExecuteSub&quot;, ScriptOpCodeNames[0x02d]=&quot;BranchPerformance&quot;, ScriptOpCodeNames[0x02e]=&quot;BranchScenarioNow&quot;, ScriptOpCodeNames[0x02f]=&quot;BranchScenarioNowAfter&quot;, ScriptOpCodeNames[0x030]=&quot;BranchScenarioNowBefore&quot;, ScriptOpCodeNames[0x031]=&quot;BranchScenarioAfter&quot;, ScriptOpCodeNames[0x032]=&quot;BranchScenarioBefore&quot;, ScriptOpCodeNames[0x033]=&quot;BranchSum&quot;, ScriptOpCodeNames[0x034]=&quot;BranchValue&quot;, ScriptOpCodeNames[0x035]=&quot;BranchVariable&quot;, ScriptOpCodeNames[0x036]=&quot;BranchVariation&quot;, ScriptOpCodeNames[0x037]=&quot;Call&quot;, ScriptOpCodeNames[0x038]=&quot;CallCommon&quot;, ScriptOpCodeNames[0x039]=&quot;camera_Move2Default&quot;, ScriptOpCodeNames[0x03a]=&quot;camera_Move2MyPosition&quot;, ScriptOpCodeNames[0x03b]=&quot;camera_Move2Myself&quot;, ScriptOpCodeNames[0x03c]=&quot;camera_Move2PositionMark&quot;, ScriptOpCodeNames[0x03d]=&quot;camera_Move2PositionMark&quot;, ScriptOpCodeNames[0x03e]=&quot;camera_Move3Default&quot;, ScriptOpCodeNames[0x03f]=&quot;camera_Move3MyPosition&quot;, ScriptOpCodeNames[0x040]=&quot;camera_Move3Myself&quot;, ScriptOpCodeNames[0x041]=&quot;camera_Move3PositionMark&quot;, ScriptOpCodeNames[0x042]=&quot;camera_Move3PositionMark&quot;, ScriptOpCodeNames[0x043]=&quot;camera_MoveDefault&quot;, ScriptOpCodeNames[0x044]=&quot;camera_MoveMyPosition&quot;, ScriptOpCodeNames[0x045]=&quot;camera_MoveMyself&quot;, ScriptOpCodeNames[0x046]=&quot;camera_MovePositionMark&quot;, ScriptOpCodeNames[0x047]=&quot;camera_MovePositionMark&quot;, ScriptOpCodeNames[0x048]=&quot;camera_SetDefault&quot;, ScriptOpCodeNames[0x049]=&quot;camera_SetEffect&quot;, ScriptOpCodeNames[0x04a]=&quot;camera_SetMyPosition&quot;, ScriptOpCodeNames[0x04b]=&quot;camera_SetMyself&quot;, ScriptOpCodeNames[0x04c]=&quot;camera_SetPositionMark&quot;, ScriptOpCodeNames[0x04d]=&quot;camera2_Move2Default&quot;, ScriptOpCodeNames[0x04e]=&quot;camera2_Move2MyPosition&quot;, ScriptOpCodeNames[0x04f]=&quot;camera2_Move2Myself&quot;, ScriptOpCodeNames[0x050]=&quot;camera2_Move2PositionMark&quot;, ScriptOpCodeNames[0x051]=&quot;camera2_Move2PositionMark&quot;, ScriptOpCodeNames[0x052]=&quot;camera2_Move3Default&quot;, ScriptOpCodeNames[0x053]=&quot;camera2_Move3MyPosition&quot;, ScriptOpCodeNames[0x054]=&quot;camera2_Move3Myself&quot;, ScriptOpCodeNames[0x055]=&quot;camera2_Move3PositionMark&quot;, ScriptOpCodeNames[0x056]=&quot;camera2_Move3PositionMark&quot;, ScriptOpCodeNames[0x057]=&quot;camera2_MoveDefault&quot;, ScriptOpCodeNames[0x058]=&quot;camera2_MoveMyPosition&quot;, ScriptOpCodeNames[0x059]=&quot;camera2_MoveMyself&quot;, ScriptOpCodeNames[0x05a]=&quot;camera2_MovePositionMark&quot;, ScriptOpCodeNames[0x05b]=&quot;camera2_MovePositionMark&quot;, ScriptOpCodeNames[0x05c]=&quot;camera2_SetDefault&quot;, ScriptOpCodeNames[0x05d]=&quot;camera2_SetEffect&quot;, ScriptOpCodeNames[0x05e]=&quot;camera2_SetMyPosition&quot;, ScriptOpCodeNames[0x05f]=&quot;camera2_SetMyself&quot;, ScriptOpCodeNames[0x060]=&quot;camera2_SetPositionMark&quot;, ScriptOpCodeNames[0x061]=&quot;CancelCut&quot;, ScriptOpCodeNames[0x062]=&quot;CancelRecoverCommon&quot;, ScriptOpCodeNames[0x063]=&quot;Case&quot;, ScriptOpCodeNames[0x064]=&quot;CaseMenu&quot;, ScriptOpCodeNames[0x065]=&quot;CaseMenu2&quot;, ScriptOpCodeNames[0x066]=&quot;CaseScenario&quot;, ScriptOpCodeNames[0x067]=&quot;CaseText&quot;, ScriptOpCodeNames[0x068]=&quot;CaseValue&quot;, ScriptOpCodeNames[0x069]=&quot;CaseVariable&quot;, ScriptOpCodeNames[0x06a]=&quot;debug_Assert&quot;, ScriptOpCodeNames[0x06b]=&quot;debug_Print&quot;, ScriptOpCodeNames[0x06c]=&quot;debug_PrintFlag&quot;, ScriptOpCodeNames[0x06d]=&quot;debug_PrintScenario&quot;, ScriptOpCodeNames[0x06e]=&quot;DefaultText&quot;, ScriptOpCodeNames[0x06f]=&quot;Destroy&quot;, ScriptOpCodeNames[0x070]=&quot;End&quot;, ScriptOpCodeNames[0x071]=&quot;EndAnimation&quot;, ScriptOpCodeNames[0x072]=&quot;ExecuteActing&quot;, ScriptOpCodeNames[0x073]=&quot;ExecuteCommon&quot;, ScriptOpCodeNames[0x074]=&quot;flag_CalcBit&quot;, ScriptOpCodeNames[0x075]=&quot;flag_CalcValue&quot;, ScriptOpCodeNames[0x076]=&quot;flag_CalcVariable&quot;, ScriptOpCodeNames[0x077]=&quot;flag_Clear&quot;, ScriptOpCodeNames[0x078]=&quot;flag_Initial&quot;, ScriptOpCodeNames[0x079]=&quot;flag_Set&quot;, ScriptOpCodeNames[0x07a]=&quot;flag_ResetDungeonResult&quot;, ScriptOpCodeNames[0x07b]=&quot;flag_ResetScenario&quot;, ScriptOpCodeNames[0x07c]=&quot;flag_SetAdventureLog&quot;, ScriptOpCodeNames[0x07d]=&quot;flag_SetDungeonMode&quot;, ScriptOpCodeNames[0x07e]=&quot;flag_SetDungeonResult&quot;, ScriptOpCodeNames[0x07f]=&quot;flag_SetPerformance&quot;, ScriptOpCodeNames[0x080]=&quot;flag_SetScenario&quot;, ScriptOpCodeNames[0x081]=&quot;Flash&quot;, ScriptOpCodeNames[0x082]=&quot;Hold&quot;, ScriptOpCodeNames[0x083]=&quot;item_GetVariable&quot;, ScriptOpCodeNames[0x084]=&quot;item_Set&quot;, ScriptOpCodeNames[0x085]=&quot;item_SetTableData&quot;, ScriptOpCodeNames[0x086]=&quot;item_SetVariable&quot;, ScriptOpCodeNames[0x087]=&quot;Jump&quot;, ScriptOpCodeNames[0x088]=&quot;JumpCommon&quot;, ScriptOpCodeNames[0x089]=&quot;lives&quot;, ScriptOpCodeNames[0x08a]=&quot;LoadPosition&quot;, ScriptOpCodeNames[0x08b]=&quot;Lock&quot;, ScriptOpCodeNames[0x08c]=&quot;main_EnterAdventure&quot;, ScriptOpCodeNames[0x08d]=&quot;main_EnterDungeon&quot;, ScriptOpCodeNames[0x08e]=&quot;main_EnterGround&quot;, ScriptOpCodeNames[0x08f]=&quot;main_EnterGroundMulti&quot;, ScriptOpCodeNames[0x090]=&quot;main_EnterRescueUser&quot;, ScriptOpCodeNames[0x091]=&quot;main_EnterTraining&quot;, ScriptOpCodeNames[0x092]=&quot;main_EnterTraining2&quot;, ScriptOpCodeNames[0x093]=&quot;main_SetGround&quot;, ScriptOpCodeNames[0x094]=&quot;me_Play&quot;, ScriptOpCodeNames[0x095]=&quot;me_Stop&quot;, ScriptOpCodeNames[0x096]=&quot;message_Close&quot;, ScriptOpCodeNames[0x097]=&quot;message_CloseEnforce&quot;, ScriptOpCodeNames[0x098]=&quot;message_Explanation&quot;, ScriptOpCodeNames[0x099]=&quot;message_FacePositionOffset&quot;, ScriptOpCodeNames[0x09a]=&quot;message_ImitationSound&quot;, ScriptOpCodeNames[0x09b]=&quot;message_KeyWait&quot;, ScriptOpCodeNames[0x09c]=&quot;message_Mail&quot;, ScriptOpCodeNames[0x09d]=&quot;message_Menu&quot;, ScriptOpCodeNames[0x09e]=&quot;message_Monologue&quot;, ScriptOpCodeNames[0x09f]=&quot;message_Narration&quot;, ScriptOpCodeNames[0x0a0]=&quot;message_Notice&quot;, ScriptOpCodeNames[0x0a1]=&quot;message_EmptyActor&quot;, ScriptOpCodeNames[0x0a2]=&quot;message_ResetActor&quot;, ScriptOpCodeNames[0x0a3]=&quot;message_SetActor&quot;, ScriptOpCodeNames[0x0a4]=&quot;message_SetFace&quot;, ScriptOpCodeNames[0x0a5]=&quot;message_SetFaceEmpty&quot;, ScriptOpCodeNames[0x0a6]=&quot;message_SetFaceOnly&quot;, ScriptOpCodeNames[0x0a7]=&quot;message_SetFacePosition&quot;, ScriptOpCodeNames[0x0a8]=&quot;message_SetWaitMode&quot;, ScriptOpCodeNames[0x0a9]=&quot;message_SpecialTalk&quot;, ScriptOpCodeNames[0x0aa]=&quot;message_SwitchMenu&quot;, ScriptOpCodeNames[0x0ab]=&quot;message_SwitchMenu2&quot;, ScriptOpCodeNames[0x0ac]=&quot;message_SwitchMonologue&quot;, ScriptOpCodeNames[0x0ad]=&quot;message_SwitchTalk&quot;, ScriptOpCodeNames[0x0ae]=&quot;message_Talk&quot;, ScriptOpCodeNames[0x0af]=&quot;Move2Position&quot;, ScriptOpCodeNames[0x0b0]=&quot;Move2PositionLives&quot;, ScriptOpCodeNames[0x0b1]=&quot;Move2PositionMark&quot;, ScriptOpCodeNames[0x0b2]=&quot;Move2PositionMark&quot;, ScriptOpCodeNames[0x0b3]=&quot;Move2PositionOffset&quot;, ScriptOpCodeNames[0x0b4]=&quot;Move2PositionOffset&quot;, ScriptOpCodeNames[0x0b5]=&quot;Move2PositionOffsetRandom&quot;, ScriptOpCodeNames[0x0b6]=&quot;Move3Position&quot;, ScriptOpCodeNames[0x0b7]=&quot;Move3PositionLives&quot;, ScriptOpCodeNames[0x0b8]=&quot;Move3PositionMark&quot;, ScriptOpCodeNames[0x0b9]=&quot;Move3PositionMark&quot;, ScriptOpCodeNames[0x0ba]=&quot;Move3PositionOffset&quot;, ScriptOpCodeNames[0x0bb]=&quot;Move3PositionOffset&quot;, ScriptOpCodeNames[0x0bc]=&quot;Move3PositionOffsetRandom&quot;, ScriptOpCodeNames[0x0bd]=&quot;MoveDirection&quot;, ScriptOpCodeNames[0x0be]=&quot;MoveHeight&quot;, ScriptOpCodeNames[0x0bf]=&quot;MovePosition&quot;, ScriptOpCodeNames[0x0c0]=&quot;MovePositionLives&quot;, ScriptOpCodeNames[0x0c1]=&quot;MovePositionLivesTime&quot;, ScriptOpCodeNames[0x0c2]=&quot;MovePositionMark&quot;, ScriptOpCodeNames[0x0c3]=&quot;MovePositionMark&quot;, ScriptOpCodeNames[0x0c4]=&quot;MovePositionMarkTime&quot;, ScriptOpCodeNames[0x0c5]=&quot;MovePositionOffset&quot;, ScriptOpCodeNames[0x0c6]=&quot;MovePositionOffset&quot;, ScriptOpCodeNames[0x0c7]=&quot;MoveSpecial&quot;, ScriptOpCodeNames[0x0c8]=&quot;MoveTurn&quot;, ScriptOpCodeNames[0x0c9]=&quot;object&quot;, ScriptOpCodeNames[0x0ca]=&quot;PauseEffect&quot;, ScriptOpCodeNames[0x0cb]=&quot;performer&quot;, ScriptOpCodeNames[0x0cc]=&quot;ProcessSpecial&quot;, ScriptOpCodeNames[0x0cd]=&quot;PursueTurnLives&quot;, ScriptOpCodeNames[0x0ce]=&quot;PursueTurnLives2&quot;, ScriptOpCodeNames[0x0cf]=&quot;ResetAttribute&quot;, ScriptOpCodeNames[0x0d0]=&quot;ResetFunctionAttribute&quot;, ScriptOpCodeNames[0x0d1]=&quot;ResetHitAttribute&quot;, ScriptOpCodeNames[0x0d2]=&quot;ResetOutputAttribute&quot;, ScriptOpCodeNames[0x0d3]=&quot;ResetReplyAttribute&quot;, ScriptOpCodeNames[0x0d4]=&quot;ResumeEffect&quot;, ScriptOpCodeNames[0x0d5]=&quot;Return&quot;, ScriptOpCodeNames[0x0d6]=&quot;SavePosition&quot;, ScriptOpCodeNames[0x0d7]=&quot;screen_FadeChange&quot;, ScriptOpCodeNames[0x0d8]=&quot;screen_FadeChangeAll&quot;, ScriptOpCodeNames[0x0d9]=&quot;screen_FadeIn&quot;, ScriptOpCodeNames[0x0da]=&quot;screen_FadeInAll&quot;, ScriptOpCodeNames[0x0db]=&quot;screen_FadeOut&quot;, ScriptOpCodeNames[0x0dc]=&quot;screen_FadeOutAll&quot;, ScriptOpCodeNames[0x0dd]=&quot;screen_FlushChange&quot;, ScriptOpCodeNames[0x0de]=&quot;screen_FlushIn&quot;, ScriptOpCodeNames[0x0df]=&quot;screen_FlushOut&quot;, ScriptOpCodeNames[0x0e0]=&quot;screen_WhiteChange&quot;, ScriptOpCodeNames[0x0e1]=&quot;screen_WhiteChangeAll&quot;, ScriptOpCodeNames[0x0e2]=&quot;screen_WhiteIn&quot;, ScriptOpCodeNames[0x0e3]=&quot;screen_WhiteInAll&quot;, ScriptOpCodeNames[0x0e4]=&quot;screen_WhiteOut&quot;, ScriptOpCodeNames[0x0e5]=&quot;screen_WhiteOutAll&quot;, ScriptOpCodeNames[0x0e6]=&quot;screen2_FadeChange&quot;, ScriptOpCodeNames[0x0e7]=&quot;screen2_FadeChangeAll&quot;, ScriptOpCodeNames[0x0e8]=&quot;screen2_FadeIn&quot;, ScriptOpCodeNames[0x0e9]=&quot;screen2_FadeInAll&quot;, ScriptOpCodeNames[0x0ea]=&quot;screen2_FadeOut&quot;, ScriptOpCodeNames[0x0eb]=&quot;screen2_FadeOutAll&quot;, ScriptOpCodeNames[0x0ec]=&quot;screen2_FlushChange&quot;, ScriptOpCodeNames[0x0ed]=&quot;screen2_FlushIn&quot;, ScriptOpCodeNames[0x0ee]=&quot;screen2_FlushOut&quot;, ScriptOpCodeNames[0x0ef]=&quot;screen2_WhiteChange&quot;, ScriptOpCodeNames[0x0f0]=&quot;screen2_WhiteChangeAll&quot;, ScriptOpCodeNames[0x0f1]=&quot;screen2_WhiteIn&quot;, ScriptOpCodeNames[0x0f2]=&quot;screen2_WhiteInAll&quot;, ScriptOpCodeNames[0x0f3]=&quot;screen2_WhiteOut&quot;, ScriptOpCodeNames[0x0f4]=&quot;screen2_WhiteOutAll&quot;, ScriptOpCodeNames[0x0f5]=&quot;se_ChangePan&quot;, ScriptOpCodeNames[0x0f6]=&quot;se_ChangeVolume&quot;, ScriptOpCodeNames[0x0f7]=&quot;se_FadeOut&quot;, ScriptOpCodeNames[0x0f8]=&quot;se_Play&quot;, ScriptOpCodeNames[0x0f9]=&quot;se_PlayFull&quot;, ScriptOpCodeNames[0x0fa]=&quot;se_PlayPan&quot;, ScriptOpCodeNames[0x0fb]=&quot;se_PlayVolume&quot;, ScriptOpCodeNames[0x0fc]=&quot;se_Stop&quot;, ScriptOpCodeNames[0x0fd]=&quot;SetAnimation&quot;, ScriptOpCodeNames[0x0fe]=&quot;SetAttribute&quot;, ScriptOpCodeNames[0x0ff]=&quot;SetBlink&quot;, ScriptOpCodeNames[0x100]=&quot;SetDirection&quot;, ScriptOpCodeNames[0x101]=&quot;SetDirectionLives&quot;, ScriptOpCodeNames[0x102]=&quot;SetEffect&quot;, ScriptOpCodeNames[0x103]=&quot;SetFunctionAttribute&quot;, ScriptOpCodeNames[0x104]=&quot;SetHeight&quot;, ScriptOpCodeNames[0x105]=&quot;SetHitAttribute&quot;, ScriptOpCodeNames[0x106]=&quot;SetMoveRange&quot;, ScriptOpCodeNames[0x107]=&quot;SetOutputAttribute&quot;, ScriptOpCodeNames[0x108]=&quot;SetPosition&quot;, ScriptOpCodeNames[0x109]=&quot;SetPositionInitial&quot;, ScriptOpCodeNames[0x10a]=&quot;SetPositionLives&quot;, ScriptOpCodeNames[0x10b]=&quot;SetPositionMark&quot;, ScriptOpCodeNames[0x10c]=&quot;SetPositionOffset&quot;, ScriptOpCodeNames[0x10d]=&quot;SetPositionOffsetRandom&quot;, ScriptOpCodeNames[0x10e]=&quot;SetReplyAttribute&quot;, ScriptOpCodeNames[0x10f]=&quot;SetupOutputAttributeAndAnimation&quot;, ScriptOpCodeNames[0x110]=&quot;Slide2Position&quot;, ScriptOpCodeNames[0x111]=&quot;Slide2PositionLives&quot;, ScriptOpCodeNames[0x112]=&quot;Slide2PositionMark&quot;, ScriptOpCodeNames[0x113]=&quot;Slide2PositionMark&quot;, ScriptOpCodeNames[0x114]=&quot;Slide2PositionOffset&quot;, ScriptOpCodeNames[0x115]=&quot;Slide2PositionOffset&quot;, ScriptOpCodeNames[0x116]=&quot;Slide2PositionOffsetRandom&quot;, ScriptOpCodeNames[0x117]=&quot;Slide3Position&quot;, ScriptOpCodeNames[0x118]=&quot;Slide3PositionLives&quot;, ScriptOpCodeNames[0x119]=&quot;Slide3PositionMark&quot;, ScriptOpCodeNames[0x11a]=&quot;Slide3PositionMark&quot;, ScriptOpCodeNames[0x11b]=&quot;Slide3PositionOffset&quot;, ScriptOpCodeNames[0x11c]=&quot;Slide3PositionOffset&quot;, ScriptOpCodeNames[0x11d]=&quot;Slide3PositionOffsetRandom&quot;, ScriptOpCodeNames[0x11e]=&quot;SlideHeight&quot;, ScriptOpCodeNames[0x11f]=&quot;SlidePosition&quot;, ScriptOpCodeNames[0x120]=&quot;SlidePositionLives&quot;, ScriptOpCodeNames[0x121]=&quot;SlidePositionLivesTime&quot;, ScriptOpCodeNames[0x122]=&quot;SlidePositionMark&quot;, ScriptOpCodeNames[0x123]=&quot;SlidePositionMark&quot;, ScriptOpCodeNames[0x124]=&quot;SlidePositionMarkTime&quot;, ScriptOpCodeNames[0x125]=&quot;SlidePositionOffset&quot;, ScriptOpCodeNames[0x126]=&quot;SlidePositionOffset&quot;, ScriptOpCodeNames[0x127]=&quot;sound_FadeOut&quot;, ScriptOpCodeNames[0x128]=&quot;sound_Stop&quot;, ScriptOpCodeNames[0x129]=&quot;StopAnimation&quot;, ScriptOpCodeNames[0x12a]=&quot;supervision_Acting&quot;, ScriptOpCodeNames[0x12b]=&quot;supervision_ActingInvisible&quot;, ScriptOpCodeNames[0x12c]=&quot;supervision_ExecuteActing&quot;, ScriptOpCodeNames[0x12d]=&quot;supervision_ExecuteActingSub&quot;, ScriptOpCodeNames[0x12e]=&quot;supervision_ExecuteCommon&quot;, ScriptOpCodeNames[0x12f]=&quot;supervision_ExecuteEnter&quot;, ScriptOpCodeNames[0x130]=&quot;supervision_ExecuteStation&quot;, ScriptOpCodeNames[0x131]=&quot;supervision_ExecuteStationCommon&quot;, ScriptOpCodeNames[0x132]=&quot;supervision_ExecuteStationCommonSub&quot;, ScriptOpCodeNames[0x133]=&quot;supervision_ExecuteStationSub&quot;, ScriptOpCodeNames[0x134]=&quot;supervision_ExecuteExport&quot;, ScriptOpCodeNames[0x135]=&quot;supervision_ExecuteExportSub&quot;, ScriptOpCodeNames[0x136]=&quot;supervision_LoadStation&quot;, ScriptOpCodeNames[0x137]=&quot;supervision_Remove&quot;, ScriptOpCodeNames[0x138]=&quot;supervision_RemoveActing&quot;, ScriptOpCodeNames[0x139]=&quot;supervision_RemoveCommon&quot;, ScriptOpCodeNames[0x13a]=&quot;supervision_SpecialActing&quot;, ScriptOpCodeNames[0x13b]=&quot;supervision_Station&quot;, ScriptOpCodeNames[0x13c]=&quot;supervision_StationCommon&quot;, ScriptOpCodeNames[0x13d]=&quot;supervision_Suspend&quot;, ScriptOpCodeNames[0x13e]=&quot;supervision2_SpecialActing&quot;, ScriptOpCodeNames[0x13f]=&quot;Switch&quot;, ScriptOpCodeNames[0x140]=&quot;SwitchDirection&quot;, ScriptOpCodeNames[0x141]=&quot;SwitchDirectionLives&quot;, ScriptOpCodeNames[0x142]=&quot;SwitchDirectionLives2&quot;, ScriptOpCodeNames[0x143]=&quot;SwitchDirectionMark&quot;, ScriptOpCodeNames[0x144]=&quot;SwitchDungeonMode&quot;, ScriptOpCodeNames[0x145]=&quot;SwitchLives&quot;, ScriptOpCodeNames[0x146]=&quot;SwitchRandom&quot;, ScriptOpCodeNames[0x147]=&quot;SwitchScenario&quot;, ScriptOpCodeNames[0x148]=&quot;SwitchScenarioLevel&quot;, ScriptOpCodeNames[0x149]=&quot;SwitchSector&quot;, ScriptOpCodeNames[0x14a]=&quot;SwitchValue&quot;, ScriptOpCodeNames[0x14b]=&quot;SwitchVariable&quot;, ScriptOpCodeNames[0x14c]=&quot;Turn2Direction&quot;, ScriptOpCodeNames[0x14d]=&quot;Turn2DirectionLives&quot;, ScriptOpCodeNames[0x14e]=&quot;Turn2DirectionLives2&quot;, ScriptOpCodeNames[0x14f]=&quot;Turn2DirectionMark&quot;, ScriptOpCodeNames[0x150]=&quot;Turn2DirectionTurn&quot;, ScriptOpCodeNames[0x151]=&quot;Turn3&quot;, ScriptOpCodeNames[0x152]=&quot;TurnDirection&quot;, ScriptOpCodeNames[0x153]=&quot;TurnDirectionLives&quot;, ScriptOpCodeNames[0x154]=&quot;TurnDirectionLives2&quot;, ScriptOpCodeNames[0x155]=&quot;TurnDirectionMark&quot;, ScriptOpCodeNames[0x156]=&quot;Unlock&quot;, ScriptOpCodeNames[0x157]=&quot;Wait&quot;, ScriptOpCodeNames[0x158]=&quot;WaitAnimation&quot;, ScriptOpCodeNames[0x159]=&quot;WaitBackEffect&quot;, ScriptOpCodeNames[0x15a]=&quot;WaitBack2Effect&quot;, ScriptOpCodeNames[0x15b]=&quot;WaitBgm&quot;, ScriptOpCodeNames[0x15c]=&quot;WaitBgm2&quot;, ScriptOpCodeNames[0x15d]=&quot;WaitBgmSignal&quot;, ScriptOpCodeNames[0x15e]=&quot;WaitEffect&quot;, ScriptOpCodeNames[0x15f]=&quot;WaitEndAnimation&quot;, ScriptOpCodeNames[0x160]=&quot;WaitExecuteLives&quot;, ScriptOpCodeNames[0x161]=&quot;WaitExecuteObject&quot;, ScriptOpCodeNames[0x162]=&quot;WaitExecutePerformer&quot;, ScriptOpCodeNames[0x163]=&quot;WaitFadeIn&quot;, ScriptOpCodeNames[0x164]=&quot;WaitLockLives&quot;, ScriptOpCodeNames[0x165]=&quot;WaitLockObject&quot;, ScriptOpCodeNames[0x166]=&quot;WaitLockPerformer&quot;, ScriptOpCodeNames[0x167]=&quot;WaitLockSupervision&quot;, ScriptOpCodeNames[0x168]=&quot;WaitMe&quot;, ScriptOpCodeNames[0x169]=&quot;WaitMoveCamera&quot;, ScriptOpCodeNames[0x16a]=&quot;WaitMoveCamera2&quot;, ScriptOpCodeNames[0x16b]=&quot;WaitRandom&quot;, ScriptOpCodeNames[0x16c]=&quot;WaitScreenFade&quot;, ScriptOpCodeNames[0x16d]=&quot;WaitScreenFadeAll&quot;, ScriptOpCodeNames[0x16e]=&quot;WaitScreen2Fade&quot;, ScriptOpCodeNames[0x16f]=&quot;WaitSe&quot;, ScriptOpCodeNames[0x170]=&quot;WaitSpecialActing&quot;, ScriptOpCodeNames[0x171]=&quot;WaitSubScreen&quot;, ScriptOpCodeNames[0x172]=&quot;WaitSubSpecialActing&quot;, ScriptOpCodeNames[0x173]=&quot;worldmap_BlinkMark&quot;, ScriptOpCodeNames[0x174]=&quot;worldmap_ChangeLevel&quot;, ScriptOpCodeNames[0x175]=&quot;worldmap_DeleteArrow&quot;, ScriptOpCodeNames[0x176]=&quot;worldmap_MoveCamera&quot;, ScriptOpCodeNames[0x177]=&quot;worldmap_OffMessage&quot;, ScriptOpCodeNames[0x178]=&quot;worldmap_SetArrow&quot;, ScriptOpCodeNames[0x179]=&quot;worldmap_SetCamera&quot;, ScriptOpCodeNames[0x17a]=&quot;worldmap_SetLevel&quot;, ScriptOpCodeNames[0x17b]=&quot;worldmap_SetMark&quot;, ScriptOpCodeNames[0x17c]=&quot;worldmap_SetMessage&quot;, ScriptOpCodeNames[0x17d]=&quot;worldmap_SetMessagePlace&quot;, ScriptOpCodeNames[0x17e]=&quot;worldmap_SetMode&quot; "  display_error="false" display_result="false" comment="" />
    
    
	<struct name="ssb_hdr" type_name="" comment="" expr="">
        <data type="int" name="nbconsts" format="unsigned" len="2" display="hex"/>
        <data type="int" name="nbstrs" format="unsigned" len="2" display="hex"/>
        <data type="int" name="scriptdatalen" format="unsigned" len="2" display="hex"/>
        <data type="int" name="consttbllen" format="unsigned" len="2" display="hex"/>
        <data type="int" name="strtbllen" format="unsigned" len="2" display="hex"/>
        <data type="int" name="unk1" format="unsigned" len="2" display="hex"/>
    </struct>
    <eval expr="CurrentOffset = CurrentOffset + sizeof(ssb_hdr)" display_error="false" display_result="false" comment=""/>
    
    <if test="ssb_hdr.scriptdatalen != 0" comment="">
        <struct name="ScriptDataHdr" type_name="" comment="" expr="">
            <data type="int" name="constlutoffset" format="unsigned" len="2" display="hex"/>
            <data type="int" name="nbgrps" format="unsigned" len="2" display="hex"/>
        </struct>
    </if>
    <if test="ssb_hdr.scriptdatalen != 0" comment="">
        <eval expr="CurrentOffset = CurrentOffset + sizeof(ScriptDataHdr)" display_error="false" display_result="false" comment=""/>
    </if>
    
    <if test="ScriptDataHdr.nbgrps != 0" comment="">
        <for name="Groups" count="ScriptDataHdr.nbgrps" stop_test="" type_name="" comment="">
            <struct name="Group" type_name="" comment="" expr="Type: {this.grpty},Beg: {(this.grpbeg*2)+sizeof(ssb_hdr);hex}({(this.grpbeg*2)+sizeof(ssb_hdr);dec}), Unk: {this.unk2}">
                <data type="int" name="grpbeg" format="unsigned" len="2" display="hex"/>
                <data type="int" name="grpty" format="unsigned" len="2" display="hex"/>
                <data type="int" name="unk2" format="unsigned" len="2" display="hex"/>
                <eval expr="CurrentOffset = CurrentOffset + 6" display_error="false" display_result="false" comment=""/>
            </struct>
        </for>
    </if>
    
    <eval expr="ParamStr=&quot; &quot;" display_error="false" display_result="false" comment=""/>
    
    <for name="InstructionsParse" count="" stop_test="addressof(this) == (((ScriptDataHdr.constlutoffset*2) + sizeof(ssb_hdr)) - sizeof(this))" type_name="" comment="">
        <use_struct name="" expr="offs:{addressof(this);hex}-&gt;{this.opcode;hex}:{ScriptOpCodeNames[this.opcode]} {@ParamStr}" type_name="instruction" comment=""/>
    </for>
    
    <eval expr="BegConstLUT = CurrentOffset" display_error="false" display_result="false" comment="Offset where the constant lookup table should be."/>
    
    <if test="ssb_hdr.nbconsts != 0" comment="">
        <for name="constptr" count="ssb_hdr.nbconsts" stop_test="" type_name="" comment="">
            <struct name="ConstTblPtr" type_name="" comment="" expr="{this.constoffset;hex}">
                <data type="int" name="constoffset" format="unsigned" len="2" display="hex"/>
                <eval expr="CurrentOffset = CurrentOffset + 2" display_error="false" display_result="false" comment=""/>
            </struct>
        </for>
    </if>
    
    <if test="(ssb_hdr.nbconsts != 0) &amp;&amp; (ssb_hdr.consttbllen != 0)" comment="">
        <struct name="ConstantLookup" type_name="" comment="" expr="">
            <eval expr="CntConstant=0" display_error="false" display_result="false" comment="CntConstant; Counter for looking up constants ptrs in the table"/>
            <for name="constantLU" count="ssb_hdr.nbconsts" stop_test="" type_name="" comment="">
                <jump offset="(constptr[CntConstant].constoffset) - ( ssb_hdr.nbstrs * 2 ) + BegConstLUT " comment="" origin="start">
                    <struct name="ConstStr" type_name="" comment="" expr="{this.conststring}">
                        
                            <data type="string" name="conststring" format="ascii" len="" display="hex"/>
                        
                        <eval expr="CurrentOffset =  CurrentOffset + STRLEN(conststring) + 1" display_error="false" display_result="false" comment=""/>
                        <eval expr="CntConstant=CntConstant + 1" display_error="false" display_result="false" comment="Increment CntConstant"/>
                    </struct>
                </jump>
            </for>
        </struct>
    </if>
    
    <eval expr="CurrentOffset = ((CurrentOffset % 2) !=0)? CurrentOffset + 1 : CurrentOffset" display_error="false" display_result="false" comment="Add ending padding byte if necessary to the current offset"/>
    
    <eval expr="BegStrLUT = CurrentOffset" display_error="false" display_result="false" comment="The expected beginning of the string lookup table!"/>
    <if test="ssb_hdr.nbstrs != 0" comment="">
        <jump offset="(ssb_hdr.consttbllen * 2) + (ssb_hdr.nbconsts * 2) + BegConstLUT" comment="Ensure we begin parsing the string table from the right position in case we got invalid constant ptrs." origin="start">
            <for name="strptrs" count="ssb_hdr.nbstrs" stop_test="" type_name="" comment="">
                <struct name="StrTblPtr" type_name="" comment="" expr="{this.stringoffset;hex}">
                    <data type="int" name="stringoffset" format="unsigned" len="2" display="hex"/>
                    <eval expr="CurrentOffset = CurrentOffset + 2" display_error="false" display_result="false" comment=""/>
                </struct>
            </for>
        </jump>
    </if>
    
    <if test="(ssb_hdr.nbstrs != 0) &amp;&amp; (ssb_hdr.strtbllen != 0)" comment="">
        <struct name="StringsLookup" type_name="" comment="" expr="">
            <eval expr="CntStrings=0" display_error="false" display_result="false" comment="CntStrings; Counter for looking up strings ptrs in the table"/>
            <for name="StringLU" count="ssb_hdr.nbstrs" stop_test="" type_name="" comment="">
                <jump offset="(strptrs[CntStrings].stringoffset) + BegConstLUT" comment="Jump from the const table LUT beginning even for strings!!" origin="start">
                    <struct name="StringStr" type_name="" comment="" expr="{this.strstring}">
                            <data type="string" name="strstring" format="ascii" len="" display="hex"/>
                        <eval expr="CurrentOffset = (CurrentOffset + (STRLEN(strstring) + 1))" display_error="false" display_result="false" comment=""/>
                        <eval expr="CntStrings=CntStrings + 1" display_error="false" display_result="false" comment="Increment CntStrings"/>
                    </struct>
                </jump>
            </for>
        </struct>
    </if>
    
    <eval expr="CurrentOffset = ((CurrentOffset % 2) !=0)? CurrentOffset + 1 : CurrentOffset" display_error="false" display_result="false" comment="Add ending padding byte if necessary to the current offset"/>
    
    <data type="none" name="none"/>
</binary_file_format>
