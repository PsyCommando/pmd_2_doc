<?xml version="1.0"?>
<!DOCTYPE binary_file_format SYSTEM "BinaryFileFormat.dtd">
<binary_file_format name="mappa_s_bin" type_name="" comment="" expr="">
	<define_struct type_name="DefDungeonLoopIteration" comment="" expr=""><if test="(CntDungeonEntry+1) &lt; NbEntriesDungeonLUT" comment="If we can access the next entry, do it, otherwise, we'll use the pointer to the start of the LUT to count the nb of floors. 
CurDungeonEntryNbFloors;"><eval expr="CurDungeonEntryNbFloors = (( DungeonLUTable[CntDungeonEntry + 1].Ptr  - DungeonLUTable[CntDungeonEntry].Ptr ) / SIZE_DefFloorDataEntry)" display_error="false" display_result="false" comment="CurDungeonEntryNbFloors; The nb of floors for the current dungeon entry."/><else/><eval expr="CurDungeonEntryNbFloors = ( (SubHeader.PtrDungeonLUTable - DungeonLUTable[CntDungeonEntry].Ptr) /SIZE_DefFloorDataEntry )" display_error="false" display_result="false" comment=""/></if><jump offset="DungeonLUTable[CntDungeonEntry].Ptr" comment="" origin="start"><for name="DFl" count="CurDungeonEntryNbFloors" stop_test="" type_name="" comment=""><use_struct name="" expr="" type_name="DefFloorDataEntry" comment=""/></for></jump><struct name="FloorDataAccess" type_name="" comment="" expr=""><eval expr="CntDungeonFloors = 0" display_error="false" display_result="false" comment="CntDungeonFloors; counter for iterating the floors of a dungeon and linking its data."/><for name="fliter" count="CurDungeonEntryNbFloors" stop_test="" type_name="" comment=""><jump offset="(DFl[CntDungeonFloors].idxterraindat * SIZE_FloorDataEntry) + PtrFloorDataTable" comment="" origin="start"><struct name="ADungFloorDataEntry" type_name="" comment="" expr=""><data type="none" name="placeholderFloorData" len="SIZE_FloorDataEntry"/><eval expr="CntDungeonFloors = CntDungeonFloors + 1" display_error="false" display_result="false" comment="Increements CntDungeonFloors;"/></struct></jump></for></struct><eval expr="CntDungeonEntry = CntDungeonEntry  + 1" display_error="false" display_result="false" comment="Increment CntDungeonEntry"/></define_struct><define_struct type_name="DefFloorDataEntry" comment="Entry for a single floor's data, contained in a dungeon's entry. Its 18 bytes long." expr=""><data type="int" name="idxterraindat" format="unsigned" len="2" display="hex"/><data type="int" name="idxpkspwn" format="unsigned" len="2" display="hex"/><data type="int" name="idxlutc" format="unsigned" len="2" display="hex"/><data type="int" name="idxitemspwn" format="unsigned" len="2" display="hex"/><data type="int" name="idxshopdat" format="unsigned" len="2" display="hex"/><data type="int" name="idxmhouseitem" format="unsigned" len="2" display="hex"/><data type="int" name="idxburieditemsdat" format="unsigned" len="2" display="hex"/><data type="int" name="unk2" format="unsigned" len="2" display="hex"/><data type="int" name="unk3" format="unsigned" len="2" display="hex"/></define_struct><struct name="SIR0Header" type_name="" comment="" expr=""><data type="string" name="magicsir0" format="ascii" len="4" domain="this == &quot;SIR0&quot;" display=""/><data type="int" name="ptrsubheader" format="unsigned" len="4" display="hex"/><data type="int" name="OffsetPtrTable" format="unsigned" len="4" display="hex"/><data type="none" name="nullmarker" len="4"/></struct><eval expr="SIZE_FloorDataEntry = 50" display_error="false" display_result="false" comment="SIZE_FloorDataEntry; 50 bytes"/><eval expr="SIZE_DefFloorDataEntry = 18" display_error="false" display_result="false" comment="SIZE_DefFloorDataEntry; The length in bytes of an entry for a single dungeon floor data entry."/><jump offset="SIR0Header.ptrsubheader" comment="" origin="start"><struct name="SubHeader" type_name="" comment="" expr=""><data type="int" name="PtrDungeonLUTable" len="4" format="unsigned" display="hex"/><data type="int" name="PtrFloorDataTbl" format="unsigned" len="4" display="hex"/><data type="int" name="PtrItemSpawnListLUT" format="unsigned" len="4" display="hex"/><data type="int" name="PtrPkmnSpawnListsLUT" format="unsigned" len="4" display="hex"/><data type="int" name="PtrLUTC" format="unsigned" len="4" display="hex"/></struct></jump><eval expr="PtrFloorDataTable = SubHeader.PtrFloorDataTbl" display_error="false" display_result="false" comment="PtrFloorDataTable; The pointer from the subheader to the floor data entries."/><eval expr="NbEntriesDungeonLUT = ((SubHeader.PtrFloorDataTbl - SubHeader.PtrDungeonLUTable) / 4)" display_error="false" display_result="false" comment="NbEntriesDungeonLUT; Nb entries in the dungeon LUT"/><jump offset="SubHeader.PtrDungeonLUTable" comment="" origin="start"><for name="DungeonLUTable" count="NbEntriesDungeonLUT" stop_test="" type_name="" comment=""><struct name="PtrLUTA" type_name="" comment="" expr=""><data type="int" name="Ptr" format="unsigned" len="4" display="hex"/><jump offset="Ptr" comment="" origin="start"><data type="none" name="TargetEntry" len="4"/></jump></struct></for></jump><struct name="DungeonFullEntries" type_name="" comment="" expr=""><eval expr="CntDungeonEntry = 0" display_error="false" display_result="false" comment="CntDungeonEntry; Counter for iterating the dungeon LUT"/><eval expr="CurDungeonEntryNbFloors = 0" display_error="false" display_result="false" comment="CurDungeonEntryNbFloors; Init"/><for name="DLoop" count="NbEntriesDungeonLUT" stop_test="" type_name="" comment=""><use_struct name="" expr="" type_name="DefDungeonLoopIteration" comment=""/></for></struct><data type="none" name="none"/>
</binary_file_format>
